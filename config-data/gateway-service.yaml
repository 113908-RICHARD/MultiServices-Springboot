server:
  port: 8080

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    hostname: localhost

spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            TokenRelay=
        - id: car-service
          uri: lb://car-service
          predicates:
            - Path=/cars/**
        - id: bike-service
          uri: lb://bike-service
          predicates:
            - Path=/bikes/**





  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: springboot-client
            client-secret: E4joOHOP6pJiOMOto3t9iI8C9yFWCi83
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: http://localhost:8085/realms/SPRINGBOOT
            authorization-uri: http://localhost:8085/realms/SPRINGBOOT/protocol/openid-connect/auth
            token-uri: http://localhost:8085/realms/SPRINGBOOT/protocol/openid-connect/token
            user-info-uri: http://localhost:8085/realms/SPRINGBOOT/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8085/realms/SPRINGBOOT/protocol/openid-connect/certs
